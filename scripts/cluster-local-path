#!/bin/bash
script_dir=$(dirname $(readlink -f $0))
source $script_dir/zoptparse.sh
source $script_dir/cluster-common.sh
set -e

zrequired=("remote-path")
zoptional=("")

zoptparse "$@" || exit 1

case "$remote_path" in
    warehouse:*)
        zprerequisite cache "cache"
        rpath=$(echo "${remote_path#*:}" | sed s,^/,,)
        [ -n "$rpath" ] || zerror "bad remote path"
        # warehouse takes time to publish updates
        retry=5
        hide_error="2>/dev/null"
        while [ $retry -gt 0 ]; do
            cached_path=$(nfleval cache2 fetch "$rpath" 2>/dev/null || true)
            if [ -n "$cached_path" ]; then
                if [ -e "$cached_path" ]; then
                    break;
                fi
            fi
            sleep $(echo 2 + $RANDOM / 32767 | bc -l)s
            retry=$((retry - 1))
            if [ $retry = 1 ]; then
                hide_error=""
            fi
        done
        ;;
    localhost:*)
        cached_path="${remote_path#*:}"
        ;;
    *:*) # other hosts
        ztempfile tmp1 "ml-abs-path"
        nfleval scp -pqB "$remote_path" "$tmp1" || zerror "password failure for scp from ${remote_path%:*} ?"
        cached_path="$tmp1"
        ;;
    *)
        zerror "unsupported remote path $remote_path"
        ;;
esac

[ -n "$cached_path" ] || zerror "remote file could not be found"
[ -f "$cached_path" ] || zerror "remote file could not be retrieved cached_path=$cached_path"


real_cached_path=$(readlink -f "$cached_path")


printf "%s\n" "$real_cached_path"

exit 0

: <<=cut
=pod

=head1 NAME

    ml-abs-path - copy a remote file locally

=head1 SYNOPSIS

    ml-abs-path OPTIONS --remote-path=[localhost|warehouse|HOSTNAME]:PATH

=head1 DESCRIPTION

This command returns the absolute path of the file specified by PATH from 
either localhost or the warehouse or another computer named HOSTNAME. If
the file is from another host it is scp'd into the local directory

=head1 RETURN VALUE

Returns 0 on success, 1 on failure.

=head1 OPTIONS

=over 4

=back

=head1 SEE ALSO

=cut

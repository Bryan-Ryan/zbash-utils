#!/bin/bash
script_dir=$(dirname $(readlink -f $0))
source $script_dir/zoptparse.sh

zrequired=("remote-path")
zoptional=("local-path" "print" "cache" "force-copy")

zoptparse "$@" || exit 1


cached_path=$(ml-abs-path --remote-path=$remote_path)

case "$remote_path" in
    warehouse:*)
        ;;
    localhost:*)
        ;;
    *:*) # other hosts
        if [ -z "$local_path" ]; then
            local_path=$(basename "${remote_path#*:}")
        elif [ -e "$local_path" ]; then
            if [ -n "$cache" ]; then
                rm -f "$local_path"
            else
                zerror "will not overwrite local file $local_path unless --cache is specified"
            fi
        fi
        force_copy=1 # no linking allowed
        ;;
    *)
        zerror "unsupported remote path $remote_path"
        ;;
esac

if printf "$local_path" | grep -q ':' >/dev/null ; then
    zerror "local path %s cannot contain hostname prefix :" "$local_path"
fi
[ -n "$cached_path" ] || zerror "remote file could not be found"
[ -f "$cached_path" ] || zerror "remote file could not be retrieved cached_path=$cached_path"

if [ -z "$local_path" ]; then
    local_path=$(basename "$cached_path")
fi

real_cached_path=$(readlink -f "$cached_path")
if [ -e "$local_path" ]; then
    [ -z "$cache" ] && zerror "will not overwrite local file $local_path unless --cache is specified"
    local_path=$(readlink -f "$local_path")
fi

#note: if cached path is same as local path, do not link or copy the files!
if [ "$local_path" != "$real_cached_path" ]; then
    # unlike write, read only links to the file
    rm -f "$local_path"
    if [ -n "$force_copy" ]; then
        cp "$cached_path" "$local_path"
    else
        # weird ln bug (thanks Nate) if cached path isn't the real path, linking can fail.
        ln -sf "$real_cached_path" "$local_path"
    fi
fi

[ -n "$print" ] && printf "%s\n" "$local_path"

exit 0

: <<=cut
=pod

=head1 NAME

    ml-read - copy a remote file locally

=head1 SYNOPSIS

    ml-read OPTIONS --remote-path=[localhost|warehouse|HOSTNAME]:PATH

=head1 DESCRIPTION

This command copies the file specified by PATH from either localhost
or the warehouse or another computer named HOSTNAME, into the current
working directory. If possible, a link will be created instead of a
copy.

=head1 RETURN VALUE

Returns 0 on success, 1 on failure.

=head1 OPTIONS

=over 4

=item --local-path

Specify the local file path that should represent the copy of the remote file.
If unspecified, then a local path will be chosen automatically. Use --print to
find out what it is. This path should not have a [localhost|warehouse|HOSTNAME] prefix.

=item --cache

If this option is missing, it is an error to overwrite the local file path.

=item --print

Print the local file path of the copied remote file.

=item --force-copy

In some cases (warehouse cache or localhost), the remote file is only linked. 
This option forces a copy to be made.

=back

=head1 SEE ALSO

=cut
